{"version":3,"sources":["components/Quiz.module.css","components/PictureQuestion.module.css","components/PictureQuestion.tsx","components/Quiz.tsx","enums/accents.enum.ts","App.js","reportWebVitals.js","index.js"],"names":["module","exports","PictureQuestion","text","imgUrl","changeFn","value","children","className","styles","image","style","backgroundImage","id","type","onChange","ACCENT","e1","e2","c1","a1","aHat","eHat","iHat","oHat","uHat","eTreme","iTreme","uTreme","Quiz","useState","answers","setAnswers","questions","setQuestions","showAccents","setShowAccents","btnClass","changeInput","e","index","val","target","curAns","useEffect","Questions","map","addAccent","accent","questionIndex","container","toggleAccent","accentText","switch","slider","round","onClick","question","url","questionContainer","Object","keys","k","emailBtn","emailAnswers","join","window","location","href","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e73fdc2e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Quiz_container__2TO_s\",\"questionContainer\":\"Quiz_questionContainer__TOp-t\",\"question\":\"Quiz_question__3V1vD\",\"answerField\":\"Quiz_answerField__3qwze\",\"toggleBtn\":\"Quiz_toggleBtn__3g_sz\",\"emailBtn\":\"Quiz_emailBtn__Jo1oc\",\"toggleAccent\":\"Quiz_toggleAccent__2KR5k\",\"accentText\":\"Quiz_accentText__2f9TZ\",\"switch\":\"Quiz_switch__1Z03G\",\"slider\":\"Quiz_slider__1-61m\",\"round\":\"Quiz_round__D6y_Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text\":\"PictureQuestion_text__1aJPZ\",\"image\":\"PictureQuestion_image__38c2U\"};","import React from \"react\";\r\nimport styles from \"./PictureQuestion.module.css\";\r\ntype PictureQuestionProps = {\r\n    text: string;\r\n    imgUrl: string;\r\n    changeFn: any;\r\n    value: string;\r\n    children: any;\r\n}\r\nfunction PictureQuestion({text, imgUrl, changeFn, value, children}: PictureQuestionProps) {\r\n    return (\r\n        <div>\r\n            <div className={styles.text}>{text}</div>\r\n            <div className={styles.image}style={{backgroundImage: `url(${imgUrl})`}}></div>\r\n            {children}\r\n            <div className=\"input-group mb-3\">\r\n                <div className=\"input-group-prepend\">\r\n                <span className=\"input-group-text\" id=\"basic-addon1\">\r\n                    Reponse\r\n                </span>\r\n                </div>\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    value={value}\r\n                    onChange={changeFn}\r\n                ></input>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PictureQuestion;\r\n","import React from \"react\";\nimport {useState, useEffect} from \"react\";\nimport styles from \"./Quiz.module.css\"; // Import css modules stylesheet as styles\nimport {Accents} from \"../enums/accents.enum\";\nimport PictureQuestion from \"./PictureQuestion\"\nimport Questions from './../questions/questions.json';\nconst ACCENT: any = Accents;\n\nfunction Quiz() {\n    const LINE_BREAK = \"%0D%0A\";\n    const [answers, setAnswers] = useState([\"\"]);\n    const [questions, setQuestions] = useState([{text: \"\"}]);\n    const [showAccents, setShowAccents] = useState(false);\n    const btnClass = \"btn btn-light p-1 pr-2 pl-2 mr-2 mb-2\";\n    const changeInput = (\n        e: React.ChangeEvent<HTMLInputElement>,\n        index: number\n    ): void => {\n        let val = e.target.value;\n        let curAns = [...answers];\n        curAns[index] = val;\n        setAnswers(curAns);\n    };\n    useEffect(() => {\n        setQuestions(Questions);\n        setAnswers(Questions.map(() => \"\"));\n    }, []);\n\n    const addAccent = (accent: string, questionIndex: number): void => {\n        let curAns = [...answers];\n        curAns[questionIndex] = curAns[questionIndex] ? curAns[questionIndex] += accent : accent;\n        setAnswers(curAns);\n    };\n    const toggleAccents = (): void => {\n        setShowAccents(!showAccents);\n    };\n\n    return (\n        <div className={styles.container}>\n            <div className={styles.toggleAccent}>\n                <div>Review</div>\n                <div><span className={`${styles.accentText}`}>Show Accent Buttons</span>\n                <label className={`${styles.switch}`}>\n                    <input type=\"checkbox\"></input>\n                    <span className={`${styles.slider} ${styles.round}`}  onClick={toggleAccents}></span>\n                </label></div>\n            </div>\n\n            {questions.map((question: any, index: number) => {\n                return !question.url ? (\n                    <div key={index} className={styles.questionContainer}>\n                        <div className={styles.question}>\n                            {index + 1}. {question.text}\n                        </div>\n                        {Object.keys(ACCENT).map(k => showAccents ?\n                            <button className={btnClass} key={k}\n                                    onClick={() => addAccent(ACCENT[k], index)}>{ACCENT[k]}</button> : null)}\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\" id=\"basic-addon1\">\n                  {`R${ACCENT.e1}ponse`}\n                </span>\n                            </div>\n                            <input\n                                type=\"text\"\n                                className=\"form-control\"\n                                value={answers[index]}\n                                onChange={(e) => changeInput(e, index)}\n                            ></input>\n                        </div>\n                    </div>\n                ) : (<div key={index} className={styles.questionContainer}>\n                        <PictureQuestion text={`${index+1}. ${question.text}`}\n                                         value={answers[index]}\n                                         changeFn={(e: any) => changeInput(e, index)}\n                                         imgUrl={question.url}>\n                            {Object.keys(ACCENT).map(k => showAccents ?\n                                <button className={btnClass} key={k}\n                                        onClick={() => addAccent(ACCENT[k], index)}>{ACCENT[k]}</button> : null)}\n                        </PictureQuestion>\n                </div>);\n            })}\n            <a\n                className={`btn btn-primary ${styles.emailBtn}`}\n                onClick={() => {\n                    const emailAnswers = answers.join(LINE_BREAK);\n                    window.location.href = `mailto:mohaiminx@gmail.com?subject=Header&body=${emailAnswers}`;\n                }}\n            >\n                Send Answers in Email\n            </a>\n        </div>\n    );\n}\n\nexport default Quiz;\n","export const Accents = {\r\n    e1:\"\\xE9\",\r\n    e2: \"\\xE8\",\r\n    c1: \"\\xE7\",\r\n    a1: \"\\xE0\",\r\n    aHat: \"\\xE2\",\r\n    eHat: \"\\xEA\",\r\n    iHat: \"\\xCE\",\r\n    oHat: \"\\xF4\",\r\n    uHat: \"\\xFB\",\r\n    eTreme: \"\\xEB\",\r\n    iTreme: \"\\xEF\",\r\n    uTreme: \"\\xFC\"\r\n};\r\n","import \"./App.css\";\nimport \"./components/Quiz\";\nimport Quiz from \"./components/Quiz\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Quiz></Quiz>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"../node_modules/bootstrap-css-only/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}